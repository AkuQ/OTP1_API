###########
# REST API


POST        /get_time
HEADER      Content-Type:application/json
REQUEST     {}
RESPONSE    "result": <string>
    result: timestring in format Y-m-d H:i:s


POST        /users/create
HEADER      Content-Type:application/json
REQUEST     {"name": <string>}
    name: user's screen name
RESPONSE  "result": {"id": <int>, "token": <string>}
    id: user's ID
    token: user's authentication token


POST        /rooms/list
HEADER      Content-Type:application/json
REQUEST     {}
RESPONSE    "result":
            [{
                "id": <int>
                "name": <string>
            }]
    id: chat rooms's ID
    name: chat rooms's display name


POST        /rooms/create
HEADER      Content-Type:application/json
REQUEST     {"name": <string>, "password": <string>}
    name: chat room's display name
    password: chat room's password
RESPONSE    "result": <int>
    result: chat rooms's ID


POST        /rooms/join
HEADER      Content-Type:application/json
REQUEST     {"chat_id": <int>, "user_id": <int>, "password": <string>}
    id: chat room's ID
    user_id: joining user's ID
    password: chat room's password
RESPONSE    "result": <bool>
    result: 1 on success, 0 if password wrong


POST        /rooms/leave
HEADER      Content-Type:application/json
REQUEST     {"user_id": <int>}
    user_id: leaving user's ID
RESPONSE    "result": <bool>
    result: 1 on success, 0 otherwise


POST        /users/list
HEADER      Content-Type:application/json
REQUEST     {"chat_id": <int>}
    chat_id: chat room's id
RESPONSE    "result":
            [{
                "name": <string>,
                "id": <int>
            }]
    name: user's name
    id: users's ID


POST        /messages/list
HEADERS     Content-Type:application/json
REQUEST     {"chat_id": <int>, "since": <int>}
    chat_id: which chat room's messages
    since: id of last received message
RESPONSE    "result":
            [{
                "id": <int>,
                "user_id" <int>,
                "message": <string>
            }]
    id: message's ID
    user_id: which user's message
    message: message content


POST        /messages/post
HEADERS     Content-Type:application/json
REQUEST     {"user_id": <int>, "chat_id": <int>, "message": <string>}
    user_id: posting user's ID
    chat_id: which chat room to post message in
    message: message content
RESPONSE    "result": <int>
    result: posted message's ID



##############
# SOCKETS API:


METHOD      'post message'
PARAMETERS  {"content": <string>}
    content: the message string
EMITS       'update messages'


METHOD      'connect' (automatic)
EMITS       'update users'


METHOD      'disconnect' (automatic)
EMITS       'update users'
